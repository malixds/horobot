import telebot
import psycopg2
import db
from telebot import types
from telebot.util import quick_markup
import pars as p
import requests
from bs4 import BeautifulSoup as bs
import pandas as pd
import re
import configparser


config = configparser.ConfigParser()

config.read('config.ini')

API_TOKEN = config.get("bot", "API_TOKEN")

print(API_TOKEN)

conn = psycopg2.connect(
    dbname="horodatabase",
    user="hastrologybot",
    password="123",
    host="localhost"
)

cursor = conn.cursor()




bot = telebot.TeleBot(API_TOKEN)

selected_zodiac_1 = None
selected_zodiac_2 = None
a = None
b = None


@bot.message_handler(commands=['start', 'help'])
def welcome(message):
    print(message)
    if message.text == '/start':
        print('asdasdas')
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        item1 = types.KeyboardButton("üíñ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å")
        item2 = types.KeyboardButton("‚öõ –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        item3 = types.KeyboardButton("‚òØ –û–±—â–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø")
        item4 = types.KeyboardButton("üêâ –ö–∏—Ç–∞–π—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø")

        markup.add(item1, item2, item3, item4)

        bot.send_message(
            message.chat.id, "–û—Ç–∫—Ä—ã–ª –º–µ–Ω—é –¥–ª—è –í–∞—Å", reply_markup=markup)
    else:
        bot.reply_to(message, """
         HELP
           """)


@bot.message_handler(func=lambda message: True)
def china_horo(message):
    global selected_zodiac_1
    print(message.text)
    if message.text == "üêâ –ö–∏—Ç–∞–π—Å–∫–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø":
        print(message.text)
        keyboard = quick_markup({
            '–ö—Ä—ã—Å–∞': {'callback_data': '–ö—Ä—ã—Å–∞'},
            '–ë—ã–∫': {'callback_data': '–ë—ã–∫'},
            '–¢–∏–≥—Ä': {'callback_data': '–¢–∏–≥—Ä'},
            '–î—Ä–∞–∫–æ–Ω': {'callback_data': '–î—Ä–∞–∫–æ–Ω'},
            '–ó–º–µ—è': {'callback_data': '–ó–º–µ—è'},
            '–û–≤—Ü–∞': {'callback_data': '–û–≤—Ü–∞'},
            '–û–±–µ–∑—å—è–Ω–∞': {'callback_data': '–û–±–µ–∑—å—è–Ω–∞'},
            '–ü–µ—Ç—É—Ö': {'callback_data': '–ü–µ—Ç—É—Ö'},
            '–°–æ–±–∞–∫–∞': {'callback_data': '–°–æ–±–∞–∫–∞'},
            '–ö–∞–±–∞–Ω': {'callback_data': '–ö–∞–±–∞–Ω'},
        }, row_width=2)
        bot.send_message(
            message.chat.id, "üêà –ü–æ–¥–±–µ—Ä–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω–æ–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≥–æ–¥—É –≤–∞—à–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è, –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2023 –≥–æ–¥", reply_markup=keyboard)
    elif message.text == '‚òØ –û–±—â–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø':
        print('asdasd')
        keyboard = quick_markup({
            '–û–≤–µ–Ω': {'callback_data': '–û–≤–µ–Ω'},
            '–¢–µ–ª–µ—Ü': {'callback_data': '–¢–µ–ª–µ—Ü'},
            '–ë–ª–∏–∑–Ω–µ—Ü—ã': {'callback_data': '–ë–ª–∏–∑–Ω–µ—Ü—ã'},
            '–†–∞–∫': {'callback_data': '–†–∞–∫'},
            '–õ–µ–≤': {'callback_data': '–õ–µ–≤'},
            '–î–µ–≤–∞': {'callback_data': '–î–µ–≤–∞'},
            '–í–µ—Å—ã': {'callback_data': '–í–µ—Å—ã'},
            '–°–∫–æ—Ä–ø–∏–æ–Ω': {'callback_data': '–°–∫–æ—Ä–ø–∏–æ–Ω'},
            '–°—Ç—Ä–µ–ª–µ—Ü': {'callback_data': '–°—Ç—Ä–µ–ª–µ—Ü'},
            '–ö–æ–∑–µ—Ä–æ–≥': {'callback_data': '–ö–æ–∑–µ—Ä–æ–≥'},
            '–í–æ–¥–æ–ª–µ–π': {'callback_data': '–í–æ–¥–æ–ª–µ–π'},
            '–†—ã–±—ã': {'callback_data': '–†—ã–±—ã'},
        }, row_width=2)
        bot.send_message(
            message.chat.id, "‚òØÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞", reply_markup=keyboard)

    elif message.text == '‚öõ –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è':
        print('asdasd')
        keyboard = quick_markup({
            '–û–≤–µ–Ω': {'callback_data': '–û–≤–µ–Ω ‚ôàÔ∏è'},
            '–¢–µ–ª–µ—Ü': {'callback_data': '–¢–µ–ª–µ—Ü ‚ôâÔ∏è'},
            '–ë–ª–∏–∑–Ω–µ—Ü—ã': {'callback_data': '–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôäÔ∏è'},
            '–†–∞–∫': {'callback_data': '–†–∞–∫ ‚ôãÔ∏è'},
            '–õ–µ–≤': {'callback_data': '–õ–µ–≤ ‚ôåÔ∏è'},
            '–î–µ–≤–∞': {'callback_data': '–î–µ–≤–∞ ‚ôçÔ∏è'},
            '–í–µ—Å—ã': {'callback_data': '–í–µ—Å—ã ‚ôéÔ∏è'},
            '–°–∫–æ—Ä–ø–∏–æ–Ω': {'callback_data': '–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôèÔ∏è'},
            '–°—Ç—Ä–µ–ª–µ—Ü': {'callback_data': '–°—Ç—Ä–µ–ª–µ—Ü ‚ôêÔ∏è'},
            '–ö–æ–∑–µ—Ä–æ–≥': {'callback_data': '–ö–æ–∑–µ—Ä–æ–≥ ‚ôëÔ∏è'},
            '–í–æ–¥–æ–ª–µ–π': {'callback_data': '–í–æ–¥–æ–ª–µ–π ‚ôíÔ∏è'},
            '–†—ã–±—ã': {'callback_data': '–†—ã–±—ã ‚ôìÔ∏è'},
        }, row_width=2)

        bot.send_message(
            message.chat.id, "‚òØÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞", reply_markup=keyboard)

    elif message.text == "üíñ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å":
        keyboard = quick_markup({
            '–û–≤–µ–Ω': {'callback_data': '–û–≤–µ–Ω‚ôàÔ∏è'},
            '–¢–µ–ª–µ—Ü': {'callback_data': '–¢–µ–ª–µ—Ü‚ôâÔ∏è'},
            '–ë–ª–∏–∑–Ω–µ—Ü—ã': {'callback_data': '–ë–ª–∏–∑–Ω–µ—Ü—ã‚ôäÔ∏è'},
            '–†–∞–∫': {'callback_data': '–†–∞–∫‚ôãÔ∏è'},
            '–õ–µ–≤': {'callback_data': '–õ–µ–≤‚ôåÔ∏è'},
            '–î–µ–≤–∞': {'callback_data': '–î–µ–≤–∞‚ôçÔ∏è'},
            '–í–µ—Å—ã': {'callback_data': '–í–µ—Å—ã‚ôéÔ∏è'},
            '–°–∫–æ—Ä–ø–∏–æ–Ω': {'callback_data': '–°–∫–æ—Ä–ø–∏–æ–Ω‚ôèÔ∏è'},
            '–°—Ç—Ä–µ–ª–µ—Ü': {'callback_data': '–°—Ç—Ä–µ–ª–µ—Ü‚ôêÔ∏è'},
            '–ö–æ–∑–µ—Ä–æ–≥': {'callback_data': '–ö–æ–∑–µ—Ä–æ–≥‚ôëÔ∏è'},
            '–í–æ–¥–æ–ª–µ–π': {'callback_data': '–í–æ–¥–æ–ª–µ–π‚ôíÔ∏è'},
            '–†—ã–±—ã': {'callback_data': '–†—ã–±—ã‚ôìÔ∏è'},
        }, row_width=2)
        bot.send_message(
            message.chat.id, "‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å \n \n üëâ –ú–µ–∂–¥—É –∂–µ–Ω—â–∏–Ω–æ–π ____ –∏ –º—É–∂—á–∏–Ω–æ–π ____  \n \n ‚öñÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def handler_china_horo(call):

    lst_horos = ['–ö—Ä—ã—Å–∞', '–ë—ã–∫', '–¢–∏–≥—Ä', '–î—Ä–∞–∫–æ–Ω', '–ó–º–µ—è',
                 '–õ–æ—à–∞–¥—å', '–û–≤—Ü–∞', '–û–±–µ–∑—å—è–Ω–∞', '–ü–µ—Ç—É—Ö', '–°–æ–±–∞–∫–∞', '–ö–∞–±–∞–Ω']

    lst_zodiac = ['–û–≤–µ–Ω', '–¢–µ–ª–µ—Ü', '–ë–ª–∏–∑–Ω–µ—Ü—ã', '–î–µ–≤–∞', '–†—ã–±—ã',
                  '–í–µ—Å—ã', '–°—Ç—Ä–µ–ª–µ—Ü', '–ö–æ–∑–µ—Ä–æ–≥', '–°–∫–æ—Ä–ø–∏–æ–Ω', '–†–∞–∫', '–í–æ–¥–æ–ª–µ–π', '–õ–µ–≤']

    lst_today_zodiac = ['–û–≤–µ–Ω ‚ôàÔ∏è', '–¢–µ–ª–µ—Ü ‚ôâÔ∏è', '–ë–ª–∏–∑–Ω–µ—Ü—ã ‚ôäÔ∏è', '–î–µ–≤–∞ ‚ôçÔ∏è', '–†—ã–±—ã ‚ôìÔ∏è',
                        '–í–µ—Å—ã ‚ôéÔ∏è', '–°—Ç—Ä–µ–ª–µ—Ü ‚ôêÔ∏è', '–ö–æ–∑–µ—Ä–æ–≥ ‚ôëÔ∏è', '–°–∫–æ—Ä–ø–∏–æ–Ω ‚ôèÔ∏è', '–†–∞–∫ ‚ôãÔ∏è', '–í–æ–¥–æ–ª–µ–π ‚ôíÔ∏è', '–õ–µ–≤ ‚ôåÔ∏è']

    lst_compatibility = ['–û–≤–µ–Ω‚ôàÔ∏è', '–¢–µ–ª–µ—Ü‚ôâÔ∏è', '–ë–ª–∏–∑–Ω–µ—Ü—ã‚ôäÔ∏è', '–î–µ–≤–∞‚ôçÔ∏è', '–†—ã–±—ã‚ôìÔ∏è',
                         '–í–µ—Å—ã‚ôéÔ∏è', '–°—Ç—Ä–µ–ª–µ—Ü‚ôêÔ∏è', '–ö–æ–∑–µ—Ä–æ–≥‚ôëÔ∏è', '–°–∫–æ—Ä–ø–∏–æ–Ω‚ôèÔ∏è', '–†–∞–∫‚ôãÔ∏è', '–í–æ–¥–æ–ª–µ–π‚ôíÔ∏è', '–õ–µ–≤‚ôåÔ∏è']
    button_name = call.data

    if button_name in lst_horos:

        cursor.execute(
            "SELECT button_description FROM buttons WHERE button_name=%s", (button_name,))
        result = cursor.fetchone()
        for horo in lst_horos:
            if horo == button_name:
                bot.send_message(call.message.chat.id, result)

    elif button_name in lst_zodiac:
        zodiac_name = call.data
        cursor.execute(
            "SELECT zodiac_description FROM zodiac WHERE zodiac_name=%s", (zodiac_name,))
        result = cursor.fetchone()
        for zodiac in lst_zodiac:
            if zodiac == zodiac_name:
                bot.send_message(call.message.chat.id, result)

    elif button_name in lst_today_zodiac:
        name = button_name[:-3]
        result = button_name + '\n' + '\n' + p.dct[name]
        bot.send_message(call.message.chat.id, result)

########################################

    elif button_name in lst_compatibility:
        global selected_zodiac_1
        if selected_zodiac_1 is None:
            selected_zodiac_1 = call.data[:-2]
            bot.send_message(call.message.chat.id,
                             f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–µ—Ä–≤—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: {selected_zodiac_1}")
            keyboard = quick_markup({
                        '–û–≤–µ–Ω': {'callback_data': '–û–≤–µ–Ω‚ôàÔ∏è'},
                        '–¢–µ–ª–µ—Ü': {'callback_data': '–¢–µ–ª–µ—Ü‚ôâÔ∏è'},
                        '–ë–ª–∏–∑–Ω–µ—Ü—ã': {'callback_data': '–ë–ª–∏–∑–Ω–µ—Ü—ã‚ôäÔ∏è'},
                        '–†–∞–∫': {'callback_data': '–†–∞–∫‚ôãÔ∏è'},
                        '–õ–µ–≤': {'callback_data': '–õ–µ–≤‚ôåÔ∏è'},
                        '–î–µ–≤–∞': {'callback_data': '–î–µ–≤–∞‚ôçÔ∏è'},
                        '–í–µ—Å—ã': {'callback_data': '–í–µ—Å—ã‚ôéÔ∏è'},
                        '–°–∫–æ—Ä–ø–∏–æ–Ω': {'callback_data': '–°–∫–æ—Ä–ø–∏–æ–Ω‚ôèÔ∏è'},
                        '–°—Ç—Ä–µ–ª–µ—Ü': {'callback_data': '–°—Ç—Ä–µ–ª–µ—Ü‚ôêÔ∏è'},
                        '–ö–æ–∑–µ—Ä–æ–≥': {'callback_data': '–ö–æ–∑–µ—Ä–æ–≥‚ôëÔ∏è'},
                        '–í–æ–¥–æ–ª–µ–π': {'callback_data': '–í–æ–¥–æ–ª–µ–π‚ôíÔ∏è'},
                        '–†—ã–±—ã': {'callback_data': '–†—ã–±—ã‚ôìÔ∏è'},
            }, row_width=2)
            bot.send_message(
                call.message.chat.id, f"‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å \n \n üëâ –ú–µ–∂–¥—É –∂–µ–Ω—â–∏–Ω–æ–π {selected_zodiac_1} –∏ ____  \n \n ‚öñÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–≤—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞", reply_markup=keyboard)
            bot.register_callback_query_handler(
                call.message, compatibility_step_2)

        else:
            global selected_zodiac_2
            selected_zodiac_2 = call.data[:-2]
            bot.send_message(call.message.chat.id,
                             f"{selected_zodiac_1} –∏ {selected_zodiac_2}")
            print(type(selected_zodiac_1))
            compatibility_dct = {
                '–û–≤–µ–Ω': 'oven',
                '–¢–µ–ª–µ—Ü': 'tele—Å',
                '–ë–ª–∏–∑–Ω–µ—Ü—ã': 'bliznecy',
                '–†–∞–∫': 'rak',
                '–õ–µ–≤': 'lev',
                '–î–µ–≤–∞': 'deva',
                '–í–µ—Å—ã': 'vesy',
                '–°–∫–æ—Ä–ø–∏–æ–Ω': 'skorpion',
                '–°—Ç—Ä–µ–ª–µ—Ü': 'strelec',
                '–ö–æ–∑–µ—Ä–æ–≥': 'kozerog',
                '–í–æ–¥–æ–ª–µ–π': 'vodolej',
                '–†—ã–±—ã': 'ryby',
            }
            URL_TEMPLATE = f'https://horoscopes.rambler.ru/sovmestimost-znakov-zodiaka/zhenshhina-{compatibility_dct[selected_zodiac_1]}-muzhchina-{compatibility_dct[selected_zodiac_2]}/'
            # URL_TEMPLATE = f'https://www.kp.ru/woman/goroskop/sovmestimost-{compatibility_dct[selected_zodiac_2]}-i-{compatibility_dct[selected_zodiac_1]}/'
            print(URL_TEMPLATE)
            selected_zodiac_1 = None
            r = requests.get(URL_TEMPLATE)
            soup = bs(r.text, "html.parser")
            # titles = soup.find_all('h3', 'wp-block-heading')
            compability = soup.find('h1', '_3wtsS _1W8Ro _2kQY7').text
            titles = ['–õ—é–±–æ–≤—å', '–°–µ–∫—Å', '–°–µ–º—å—è –∏ –±—Ä–∞–∫', '–î—Ä—É–∂–±–∞']
            # texts = soup.find_all('p', class_='mtZOt')
            content = soup.find('div', class_='_1E4Zo').get_text()
            print(content)
            

            pattern = r'(?<=[a-z–∞-—è])(?=[A-Z–ê-–Ø])|(?<=\.)(?=[A-Z–ê-–Ø])'

            modified_text = re.sub(pattern, '\n\n', content)

            bot.send_message(call.message.chat.id, compability + '\n' + '\n' + modified_text)


def compatibility_step_2(message):
    print('OSKDJFKLSDJFLKSDJFKLSJ')
    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤—Ç–æ—Ä–æ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
    global selected_zodiac_1
    selected_zodiac_1 = None
    selected_zodiac_2 = message.text

    bot.send_message(
        message.chat.id, f"{selected_zodiac_1} –∏ {selected_zodiac_2}")
    # –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω—É–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ –∑–¥–µ—Å—å
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞—Å—á–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    # –ó–∞—Ç–µ–º —Å–±—Ä–æ—Å—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é selected_zodiac_1 –≤ None –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

    # –î—Ä—É–≥–∏–µ –¥–µ–π—Å—Ç–≤–∏—è...


print(a, b)


bot.infinity_polling()
